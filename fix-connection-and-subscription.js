#!/usr/bin/env node

/**
 * Script para resolver problemas de conectividade e ativar subscription
 * Execute com: node fix-connection-and-subscription.js
 */

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üöÄ Iniciando corre√ß√£o de conectividade e subscription...\n');

// 1. Verificar conectividade DNS
console.log('1Ô∏è‚É£ Testando conectividade DNS...');
try {
    execSync('nslookup db.spxlbemmqfpwzgbovoks.supabase.co', { stdio: 'inherit' });
    console.log('‚úÖ DNS funcionando\n');
} catch (error) {
    console.log('‚ùå Problema de DNS detectado');
    console.log('üí° Tentando resolver com flush DNS...');
    
    try {
        // Flush DNS no macOS
        execSync('sudo dscacheutil -flushcache', { stdio: 'inherit' });
        execSync('sudo killall -HUP mDNSResponder', { stdio: 'inherit' });
        console.log('‚úÖ DNS cache limpo\n');
    } catch (flushError) {
        console.log('‚ö†Ô∏è N√£o foi poss√≠vel limpar DNS cache (pode precisar de sudo)\n');
    }
}

// 2. Verificar conectividade com Supabase
console.log('2Ô∏è‚É£ Testando conectividade com Supabase...');
try {
    execSync('curl -I https://spxlbemmqfpwzgbovoks.supabase.co --max-time 10', { stdio: 'inherit' });
    console.log('‚úÖ Supabase acess√≠vel\n');
} catch (error) {
    console.log('‚ùå Problema de conectividade com Supabase');
    console.log('üí° Verificando configura√ß√µes de rede...\n');
}

// 3. Executar seed com subscription
console.log('3Ô∏è‚É£ Executando seed do usu√°rio e ativando subscription...');
try {
    // Executa o seed do Supabase que agora inclui ativa√ß√£o de subscription
    execSync('bun run packages/db/src/seed/index.ts', { 
        stdio: 'inherit',
        cwd: process.cwd()
    });
    console.log('‚úÖ Seed executado com sucesso\n');
} catch (error) {
    console.log('‚ùå Erro no seed:', error.message);
    console.log('üí° Tentando seed alternativo...\n');
    
    try {
        // Tenta executar diretamente o arquivo de seed
        execSync('cd packages/db && bun src/seed/index.ts', { stdio: 'inherit' });
        console.log('‚úÖ Seed alternativo executado\n');
    } catch (altError) {
        console.log('‚ùå Seed alternativo tamb√©m falhou\n');
    }
}

// 4. Verificar se o usu√°rio tem subscription ativa
console.log('4Ô∏è‚É£ Verificando status da subscription...');

// Cria um script tempor√°rio para verificar subscription
const checkScript = `
import { db } from '@onlook/db/src/client';
import { subscriptions } from '@onlook/db/src/schema';
import { eq } from 'drizzle-orm';

const SEED_USER_ID = '929b4640-b356-4936-a2a0-b2aac77bb575';

async function checkSubscription() {
    try {
        const subscription = await db.query.subscriptions.findFirst({
            where: eq(subscriptions.userId, SEED_USER_ID),
            with: {
                product: true,
                price: true
            }
        });

        if (subscription) {
            console.log('‚úÖ Subscription encontrada:');
            console.log('üì¶ Produto:', subscription.product.name);
            console.log('üìä Status:', subscription.status);
            console.log('üí∞ Limite mensal:', subscription.price.monthlyMessageLimit, 'mensagens');
        } else {
            console.log('‚ùå Nenhuma subscription encontrada para o usu√°rio');
        }
    } catch (error) {
        console.log('‚ùå Erro ao verificar subscription:', error.message);
    }
    process.exit(0);
}

checkSubscription();
`;

fs.writeFileSync('temp-check-subscription.ts', checkScript);

try {
    execSync('bun temp-check-subscription.ts', { stdio: 'inherit' });
} catch (error) {
    console.log('‚ö†Ô∏è N√£o foi poss√≠vel verificar subscription automaticamente');
}

// Limpa arquivo tempor√°rio
try {
    fs.unlinkSync('temp-check-subscription.ts');
} catch (e) {}

// 5. Configura√ß√µes de rede recomendadas
console.log('\n5Ô∏è‚É£ Recomenda√ß√µes finais:');
console.log('üîß Se os problemas persistirem, tente:');
console.log('   ‚Ä¢ Reiniciar o roteador/modem');
console.log('   ‚Ä¢ Usar DNS p√∫blico (8.8.8.8, 1.1.1.1)');
console.log('   ‚Ä¢ Verificar firewall/antiv√≠rus');
console.log('   ‚Ä¢ Tentar conex√£o via hotspot m√≥vel');

console.log('\n6Ô∏è‚É£ Para executar o servidor:');
console.log('   bun run dev');

console.log('\n‚ú® Script de corre√ß√£o conclu√≠do!');
